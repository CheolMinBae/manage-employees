name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup SSH key from base64
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY_B64 }}" | base64 -d > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Sync project files to EC2
      run: |
        rsync -az \
          -e "ssh -i ~/.ssh/deploy_key" \
          --exclude ".git" \
          --exclude "node_modules" \
          --exclude ".github" \
          --exclude "certbot/" \
          ./ ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/manage-employees/

    - name: Run docker-compose on EC2
      run: |
        ssh -i ~/.ssh/deploy_key ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
          cd /home/ubuntu/manage-employees

          # 1. nginx 먼저 실행 (HTTP 인증서 발급용)
          docker-compose up -d nginx

          # 2. 인증서가 없으면 certbot으로 발급 시도
          if [ ! -f ./certbot/conf/live/seedwatercafe.com/fullchain.pem ]; then
            docker-compose run --rm certbot
            docker-compose restart nginx
          fi

          # 3. web 서비스 포함 전체 실행
          docker-compose up -d web
        EOF
