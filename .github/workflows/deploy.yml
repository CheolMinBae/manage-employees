name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup SSH key from base64
      run: |
        mkdir -p ~/.ssh
        
        # SSH 키 디코딩 및 검증
        echo "${{ secrets.EC2_SSH_KEY_B64 }}" | base64 --decode > ~/.ssh/deploy_key
        
        # 파일 권한 설정
        chmod 600 ~/.ssh/deploy_key
        
        # SSH 키 파일 검증
        if [ ! -s ~/.ssh/deploy_key ]; then
          echo "❌ SSH key file is empty or not created"
          exit 1
        fi
        
        # SSH 키 형식 검증
        if ! grep -q "BEGIN.*PRIVATE KEY" ~/.ssh/deploy_key; then
          echo "❌ SSH key format is invalid"
          echo "First few lines of key file:"
          head -n 3 ~/.ssh/deploy_key
          exit 1
        fi
        
        echo "✅ SSH key decoded and validated successfully"
        ls -la ~/.ssh/deploy_key
        
        # Known hosts 추가
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Sync project files to EC2
      run: |
        rsync -az \
          -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" \
          --exclude ".git" \
          --exclude "node_modules" \
          --exclude ".github" \
          ./ ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/manage-employees/

    - name: Create .env file and run docker-compose on EC2
      run: |
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
          cd /home/ubuntu/manage-employees
          
          # .env 파일 생성
          cat > .env << 'ENVEOF'
        MONGODB_URI=${{ secrets.MONGODB_URI }}
        NODE_ENV=production
        GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
        NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
        NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
        EMAIL_USER=${{ secrets.EMAIL_USER }}
        EMAIL_PASS=${{ secrets.EMAIL_PASS }}
        ENVEOF
          
          echo "✅ .env file created"
          
          # Docker 컨테이너 중지 및 새로 빌드
          docker-compose down
          docker-compose up -d --build web
          
          # 배포 상태 확인
          sleep 10
          docker-compose ps
          docker-compose logs --tail=20 web
        EOF
